<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC
    "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="marketUser">
    <!-- sql map for User -->
    <resultMap id="User" class="com.worldvisa.business.domain.market.User">
		<result property="userId" column="USER_ID" />
		<result property="userGroupId" column="USER_GROUP_ID" />
		<result property="name" column="NAME" />
		<result property="gender" column="GENDER" />
		<result property="age" column="AGE" />
		<result property="qualCompleted" column="QUAL_COMPLETED" />
		<result property="dateOfBirth" column="DATE_OF_BIRTH" />
		<result property="email" column="EMAIL" />
		<result property="mobile" column="MOBILE" />
		<result property="telephoneNo" column="TELEPHONE_NO" />
		<result property="desCountries" column="DES_COUNTRIES" />
		<result property="desCollege" column="DES_COLLEGE" />
		<result property="desCourse" column="DES_COURSE" />
		<result property="specialization" column="SPECIALIZATION" />
		<result property="addedBy" column="ADDED_BY" />
		<result property="addedOn" column="ADDED_ON" />
	</resultMap>
    <!-- queries -->
    <insert id="create" parameterClass="com.worldvisa.business.domain.market.User">
    	<selectKey resultClass="java.lang.Long" keyProperty="userId" type="pre">
	        select IFNULL(MAX(USER_ID)+1, 1) AS userId FROM MARKET_USER
	    </selectKey>
        INSERT INTO MARKET_USER (
			USER_ID,
			USER_GROUP_ID,
			NAME,
			GENDER,
			AGE,
			QUAL_COMPLETED,
			DATE_OF_BIRTH,
			EMAIL,
			MOBILE,
			TELEPHONE_NO,
			DES_COUNTRIES,
			DES_COLLEGE,
			DES_COURSE,
			SPECIALIZATION,
			ADDED_BY,
			ADDED_ON
        )
        VALUES (
			#userId:DECIMAL#,
			#userGroupId:DECIMAL#,
			#name:VARCHAR#,
			#gender:VARCHAR#,
			#age:VARCHAR#,
			#qualCompleted:VARCHAR#,
			#dateOfBirth:VARCHAR#,
			#email:VARCHAR#,
			#mobile:VARCHAR#,
			#telephoneNo:VARCHAR#,
			#desCountries:VARCHAR#,
			#desCollege:VARCHAR#,
			#desCourse:VARCHAR#,
			#specialization:VARCHAR#,
			#addedBy:VARCHAR#,
			#addedOn:TIMESTAMP#
        )
    </insert>
    
    <update id="update" parameterClass="java.util.HashMap">
        UPDATE MARKET_USER SET
			USER_GROUP_ID = #data.userGroupId:DECIMAL#, 
			NAME = #data.name:VARCHAR#, 
			GENDER = #data.gender:VARCHAR#, 
			AGE = #data.age:VARCHAR#, 
			QUAL_COMPLETED = #data.qualCompleted:VARCHAR#, 
			DATE_OF_BIRTH = #data.dateOfBirth:VARCHAR#, 
			EMAIL = #data.email:VARCHAR#, 
			MOBILE = #data.mobile:VARCHAR#, 
			TELEPHONE_NO = #data.telephoneNo:VARCHAR#, 
			DES_COUNTRIES = #data.desCountries:VARCHAR#, 
			DES_COLLEGE = #data.desCollege:VARCHAR#, 
			DES_COURSE = #data.desCourse:VARCHAR#, 
			SPECIALIZATION = #data.specialization:VARCHAR#
		WHERE
             USER_ID = #filter.userId:DECIMAL#
    </update>
    
    <delete id="deleteByUserId" parameterClass="java.util.Map">
        DELETE FROM MARKET_USER WHERE USER_ID IN
        <iterate property="user" open="(" close=")" conjunction=",">#user[]#</iterate>
    </delete>
    
        
    <delete id="delete" parameterClass="com.worldvisa.business.domain.market.User">
        DELETE FROM MARKET_USER
       	<dynamic prepend="WHERE">
            <isNotNull prepend="AND" property="userId">
                USER_ID = #userId#
            </isNotNull>
            <isNotNull prepend="AND" property="userGroupId">
                USER_GROUP_ID = #userGroupId#
            </isNotNull>
      	</dynamic>
    </delete>
    
    <sql id="readSelect">
        SELECT * FROM MARKET_USER
    </sql>
    
    <select id="read" resultMap="marketUser.User" 
    	parameterClass="com.worldvisa.business.domain.market.User">
        <include refid="marketUser.readSelect" />
        <dynamic prepend="WHERE">
            <isNotNull prepend="AND" property="userGroupId">
	            USER_GROUP_ID = #userGroupId#
            </isNotNull>
            <isNotNull prepend="AND" property="userId">
				USER_ID = #userId#
            </isNotNull>
        </dynamic>
    </select>
    
    <select id="readByUserIds" resultMap="marketUser.User" 
    	parameterClass="java.util.Map">
        <include refid="marketUser.readSelect" />
	        WHERE USER_ID IN
	        <iterate property="id" open="(" close=")" conjunction=",">#id[]#</iterate>
    </select>
    
    <resultMap id="UserSearchMap" class="com.worldvisa.business.domain.market.User">
		<result property="userId" column="userId" />
		<result property="name" column="name" />
		<result property="age" column="age" />
		<result property="gender" column="gender" />
		<result property="requestNumber" column="requestNumber" />
		<result property="qualCompleted" column="qualCompleted" />
		<result property="email" column="email" />
		<result property="mobile" column="mobile" />
		<result property="desCountries" column="desCountries" />
		<result property="desCourse" column="desCourse" />
		<result property="specialization" column="specialization" />
		<result property="desCollege" column="desCollege" />
		<result property="userGroupId" column="userGroupId" />
		<result property="addedBy" column="addedBy" />
		<result property="telephoneNo" column="telephoneNo" />
		<result property="dateOfBirth" column="dateOfBirth" />
		<result property="addedOn" column="addedOn" />
		<result property="userGroup.serviceType" column="serviceType" />
		<result property="userGroup.branchOffice" column="branchOffice" />
		<result property="userGroup.userGroupName" column="userGroupName" />
	</resultMap>
    
    <sql id="readByFilterQuery" >
		SELECT * FROM (
		(
			SELECT
				MNRU.USER_ID as userId,
				MNRU.NAME as name,
				MNRU.GENDER as gender,
				MNRU.AGE as age,
				MNRU.QUAL_COMPLETED as qualCompleted,
				MNRU.EMAIL as email,
				MNRU.MOBILE as mobile,
				MNRU.DES_COUNTRIES as desCountries,
				MNRU.DES_COURSE as desCourse,
				MNRU.SPECIALIZATION as specialization,
				MNRU.DES_COLLEGE as desCollege,
				MUG.SERVICE_TYPE as serviceType,
				MUG.BRANCH_OFFICE as branchOffice,
				MUG.USER_GROUP_NAME as userGroupName,
				MNRU.USER_GROUP_ID as userGroupId,
				null as requestNumber,
				MNRU.ADDED_BY as addedBy,
				MNRU.TELEPHONE_NO as telephoneNo,
				MNRU.DATE_OF_BIRTH as dateOfBirth,
				MNRU.ADDED_ON as addedOn	
			FROM MARKET_USER MNRU
			LEFT OUTER JOIN MARKET_USER_GROUP MUG 
				ON MNRU.USER_GROUP_ID = MUG.USER_GROUP_ID
    	)
    	UNION
    	(
			SELECT
				null as userId,
				PUD.NAME as name,
				null as gender,
				(DATEDIFF(CURRENT_DATE, PUD.DATE_OF_BIRTH)/365) as age,
				NULL as qualCompleted,
				PUD.EMAIL_ID as email,
				PUD.CELLPHONE as mobile,
				RCP.COUNTRY as desCountries,
				RCPF.COURSE_DETAIL as desCourse,
				null as specialization,
				RCPF.INSTITUTION_CHOICE as desCollege,
				RRD.REQUEST_TYPE as serviceType,
				PED.BASE_LOCATION as branchOffice,
				'Registered Users' as userGroupName,
				0 as userGroupId,
				RRD.REPORT_ID as requestNumber,
				RRD.ASSIGNED_TO as addedBy,
		        PUD.LANDLINE as telephoneNo,
		        PUD.DATE_OF_BIRTH as dateOfBirth,
		        RRD.RAISED_DT as addedOn
	        FROM PROFILE_USER_DETAILS PUD
			LEFT OUTER JOIN REQUEST_REPORT_DETAILS RRD
			  ON RRD.RAISED_FOR = PUD.EMAIL_ID
			LEFT OUTER JOIN PROFILE_EMPLOYEE_DETAILS PED
			  ON RRD.ASSIGNED_TO = PED.EMAIL_ID
			LEFT OUTER JOIN REQUEST_COUNTRY_PREFERENCES RCP
			  ON RCP.REPORT_ID = RRD.REPORT_ID AND RCP.SEQ_NUM = 1
			LEFT OUTER JOIN REQUEST_COURSE_PREFERENCE RCPF
			  ON RCPF.REPORT_ID = RRD.REPORT_ID AND RCPF.SEQ_NUM = 1
   		)
  		) as A
          <dynamic prepend="WHERE">
            <isNotEmpty prepend="AND" property="name">
                A.name LIKE CONCAT('%',#name#,'%')
            </isNotEmpty>
            <isNotEmpty prepend="AND" property="gender">
                A.gender LIKE CONCAT('%',#gender#,'%')
            </isNotEmpty>
		    <isNotEmpty prepend="AND" property="qualCompleted">
                A.qualCompleted LIKE CONCAT('%',#qualCompleted#,'%')
            </isNotEmpty>
		    <isNotEmpty prepend="AND" property="email">
                A.email LIKE CONCAT('%',#email#,'%')
            </isNotEmpty>
		    <isNotEmpty prepend="AND" property="mobile">
                A.mobile LIKE CONCAT('%',#mobile#,'%')
            </isNotEmpty>
		    <isNotEmpty prepend="AND" property="desCountries">
                A.desCountries LIKE CONCAT('%',#desCountries#,'%')
            </isNotEmpty>
		    <isNotEmpty prepend="AND" property="desCourse">
                A.desCourse LIKE CONCAT('%',#desCourse#,'%')
            </isNotEmpty>
		    <isNotEmpty prepend="AND" property="specialization">
                A.specialization LIKE CONCAT('%',#specialization#,'%')
            </isNotEmpty>
		    <isNotEmpty prepend="AND" property="desCollege">
                A.desCollege LIKE CONCAT('%',#desCollege#,'%')
            </isNotEmpty>
		    <isNotEmpty prepend="AND" property="userGroupId">
                A.userGroupId  = #userGroupId#
            </isNotEmpty>
		    <isNotEmpty prepend="AND" property="addedBy">
                A.addedBy = #addedBy#
            </isNotEmpty>
		    <isNotEmpty prepend="AND" property="createdTime">
                DATE(A.addedOn) BETWEEN DATE(#createdTime[0]#) AND DATE(#createdTime[1]#)
            </isNotEmpty>
      </dynamic>
    </sql>
    
    
   	<select id="readCountByFilter" resultClass="java.lang.Integer"
	parameterClass="com.worldvisa.business.domain.market.UserFilter">
		SELECT count(*) FROM (
			<include refid="marketUser.readByFilterQuery" />
		) maintable
	</select>
	
	<select id="readByFilter" resultMap="marketUser.UserSearchMap"
    	parameterClass="com.worldvisa.business.domain.market.UserFilter">
		SELECT * FROM (
			SELECT *,
				@rownum:=@rownum+1 AS rownum
			FROM (
			<include refid="marketUser.readByFilterQuery" />
		        ORDER BY $sortCol$ $sortOrder$) maintable, (SELECT @rownum:=0) r) a
		WHERE a.rownum between #startRow# and #endRow#
	</select>
</sqlMap>